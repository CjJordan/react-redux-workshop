section
  h1.lower react-router
  p Declarative routing for React via components
  p
    a(href="https://github.com/ReactTraining/react-router") github react-router

section
  ul
    li Helps us track routes with states of our application
    li Maintains the browser history within the app
    li Able to nest routes and their handlers
    li Routes are represented as React Components
    li Provides route info to components via props

section
  h2 react-router component's we'll be covering...

section
  h2.lower.component &lt;BrowserRouter&gt;
  p A type of &lt;Router&gt; that uses the HTML5 history API to keep your UI in sync with the URL.<br/><br/>
  p One of 5 different types of Routers available in the react-router library.


section
  h2.lower.component &lt;Route&gt;
  p The core path routing component. Renders some UI when the location matches the Route path.

section
  h3.plain &lt;Route&gt; config properties we'll cover
  pre(style="width:100%").
    <code class="html" data-trim data-noescape>
      &lt;Route <mark>exact</mark> path="/employees" component={Employees}/&gt;
      &lt;Route <mark>path</mark>='/employees/detail/:_id' component={EmployeesDetail} /&gt;
      &lt;Route path='/employees/create' <mark>component</mark>={EmployeesCreate} /&gt;

    </code>

section
  h3.lower path
  ul
    li The pattern used to match this route against the URL
    li Based on Express-style path strings
      ul
        li e.g. <span class="component" style="color:#c82506">/employees/:id</span>
        li npm
          a(href="https://www.npmjs.com/package/path-to-regexp")  path-to-regexp
    li If multiple routes match, each will get rendered
    li If path not defined, the route will always render

section
  h3.lower component
  ul
    li The react component to be rendered when the route is active
    li Alternative render properties (not covered today):
      ul
        li <span class="component" style="color:#c82506">render</span> - quick inline function rendering
        li <span class="component" style="color:#c82506">children</span> - for complex rendering logic needs

section
  h3.lower exact & strict
  ul
    li.
      <span class="component" style="color:#c82506">exact</span> - only matches if an
      <span style="font-style:italic">exact</span> match
    li.
      <span class="component" style="color:#c82506">strict</span> - requires the trailing slash
      <span style="font-style:italic">exact</span> match
    li.
      If <span class="component">exact</span> is omitted, a route path of <span class="component">/employees</span>
      will match a URL of <span class="component">/employees/anything</span>
    li.
      Check the <a href="https://reacttraining.com/react-router/web/api/Route/exact-bool">docs</a> for more info

section
  h2.lower.component &lt;Redirect&gt;
  p Navigates to a new location. <br/><br/>
  pre.
    <code class="html" data-trim data-noescape>
      &lt;Redirect from='/employee-list' to='/employees'/&gt;

    </code>

section
  h2.lower.component &lt;Switch&gt;
  p Renders the first child Route/Redirect that matches.<br/><br/>
  pre(style="width:100%").
    <code class="html" data-trim data-noescape>
      &lt;Switch&gt;
        &lt;Redirect from='/employee-list' to='/employees'/&gt;

        &lt;Route path='/employees/details/:_id' component={EmployeeDetail} /&gt;

        &lt;Route path="/employees" component={Employees}/&gt;

        {/* Unreachable: inside Switch && /employees is not exact */}
        &lt;Route path="/employees/depts" component={EmployeesByDept}/&gt;

      &lt;/Switch&gt;

    </code>

section
  h2.lower.component &lt;Link&gt;
  p Declarative navigation integrated with the router.

section
  ul
    li Renders an &lt;a&gt; tag
    li Links to a route in the application
    li If you change the path of your route, <br/>you don't have to change your links as well
    li.
      <span class="component" style="color:#c82506">&lt;NavLink&gt;</span> is a specialized version of &lt;Link&gt;
    ul
      li Knows when the route it links to is active
      li Dynamic
        span.component  activeClassName/activeStyle
      li Has exact and strict params like a Route

section
  h3.lower &lt;Link&gt; Examples
  pre(style="width:100%").
    <code class="javascript" data-trim>
    &lt;Link className={projectsClasses} to="projects"&gt;Projects&lt;/Link&gt;
    &lt;Link to="{`${employees}/${id}`}" replace &gt;Employees&lt;/Link&gt;
    &lt;Link className={timesheetsClasses} to={{
        pathname: '/timesheets',
        search: '?sort=startDate',
        hash: '#id-12345',
        state: { highlightUser: this.state.user._id }
      }} &gt;Timesheets&lt;/Link&gt;

    </code>

section
  h2 Using react-router in your components

section
  h2.lower Route Props
  p Components receive the following props from Router
  ul.component(style="text-align: left;")
    li match
    li location
    li history

section
  h3.lower match
  p Object containing information about how the Route matched the URL.
  ul
    li
      <span class="component" style="color:#c82506">path</span> - Path pattern on the Route that matched
      <br/>
      span(style="margin-left:1em; color:#656565;") e.g.&nbsp;
        span.component(style="font-size:0.95em;") /employee/:id
    li
      <span class="component" style="color:#c82506">url</span> - URL segment that was matched
      <br/>
      span(style="margin-left:1em;color:#656565;") e.g.&nbsp;
        span.component(style="font-size:0.95em;") /employee/2
    li
      <span class="component" style="color:#c82506">params</span> - key/values for the dynamic parts of URL
      <br/>
      span(style="margin-left:1em;color:#656565;")
        span.component(style="font-size:0.95em;") /employee/2 =>/employee/:id => {id:2}
    li
      <span class="component" style="color:#c82506">isExact</span> - true if the entire URL was matched

section
  h3.lower location
  p Represents where the app is, was or will be.
  pre.
    <code class="javascript" data-trim>
    {
      key: 'd34cf',
      pathname: '/employees'
      search: '?sortBy=totalHours',
      hash: '#id-1234',
      state: {
        [userDefined]: true
      }
    }

    </code>

section
  p Where we are
  p.component this.props.location
  p Where we were
  p.component this.props.history...
  p Where we are going
  p.component &lt;Link to={location}/&gt;


section
  h3 Lab Prep
  p Show Projects and Timesheets implementation

section
  h1 Lab 03
  h2 Routing and Component Composition
